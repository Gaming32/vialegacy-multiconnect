plugins {
    id 'fabric-loom' version '1.0.17'
    id 'io.github.juuxel.loom-quiltflower' version '1.8.0'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

repositories {
    exclusiveContent {
        forRepository {
            maven {
                name = "Modrinth"
                url = "https://api.modrinth.com/maven"
            }
        }
        filter {
            includeGroup "maven.modrinth"
        }
    }
    maven {
        url 'https://maven.parchmentmc.org/'
    }
    maven {
        name = "ViaVersion"
        url "https://repo.viaversion.com"
    }
    maven {
        name = "Lenni0451"
        url "https://maven.lenni0451.net/releases"
    }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.layered {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${project.parchment_mcversion}:${project.parchment_version}@zip")
    }
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    implementation "com.viaversion:viaversion:4.5.2-SNAPSHOT"
    include implementation("com.viaversion:viabackwards-common:4.5.2-SNAPSHOT")
    include implementation("net.raphimc:ViaLegacy:2.1.0")
    runtimeOnly "org.yaml:snakeyaml:1.33"

    include modImplementation(files("lib/multiconnect-1.6-beta.25.jar", "lib/via-translator-1.6-beta.25.jar"))

    include modImplementation(fabricApi.module("fabric-resource-loader-v0", project.fabric_api_version))
}

loom {
    accessWidener.set(file("src/main/resources/vialegacy-multiconnect.accesswidener"))
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
